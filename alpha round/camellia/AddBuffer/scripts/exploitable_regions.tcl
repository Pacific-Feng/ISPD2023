####
#
# Script for ISPD'23 contest.
#
# The baseline code, that is for extraction of cell placement in rows and sites, was provided as courtesy by team
# CUEDA (The Chinese University of Hong Kong; Fangzhou Wang, Qijing Wang, Bangqi Fu, Shui Jiang, Xiaopeng Zhang,
# Tsung-Yi Ho, Evangeline F.Y. Young) during ISPD'22 contest. Many thanks to them!
#
# Further edits by Johann Knechtel, NYUAD
#
####

set out [open "placement.info" w+]

# extract design geometries
set core_rect [get_db designs .core_bbox]
set x_l_core [lindex $core_rect 0 0]
set y_l_core [lindex $core_rect 0 1]
set x_unit [lindex [get_db sites .size] 0 0]
set y_unit [lindex [get_db sites .size] 0 1]

puts $out "CORE_BBOX [lindex [get_db designs .core_bbox] 0]"
puts $out "NUM_ROWS [llength [get_db rows]]"
puts $out "NUM_SITES_PER_ROW [get_db [lindex [get_db rows] 0] .num_x]"
puts $out "SITE_WIDTH $x_unit "
puts $out "SITE_HEIGHT $y_unit "

# extract cell placement; note that physical cells (decaps, fillers, tapcells) are already deleted at this point
foreach cell [get_db insts] {

	set cell_rect [lindex [get_db $cell .bbox] 0]

	set x_pos_core [expr [lindex $cell_rect 0] - $x_l_core]
	set y_pos_core [expr [lindex $cell_rect 1] - $y_l_core]
	set x_width [expr [lindex $cell_rect 2] - [lindex $cell_rect 0]]

	set x_idx [expr int(($x_pos_core + 0.001) / $x_unit)]
	set y_idx [expr int(($y_pos_core + 0.001) / $y_unit)]
	set width [expr int(($x_width + 0.001) / $x_unit)]

	puts $out "[get_db $cell] $x_idx $y_idx $width"
}
close $out

# external call, log lines printed out as they come in, via a pipe construct
# https://stackoverflow.com/a/35398439
set pipe [open |[list scripts/exploitable_regions.bin placement.info 20 | tee reports/exploitable_regions.rpt 2>@1]]
while {[gets $pipe line] >= 0} {
	puts "$line"
}
close $pipe
